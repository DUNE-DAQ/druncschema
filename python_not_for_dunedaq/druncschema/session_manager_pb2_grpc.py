# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from druncschema import request_response_pb2 as druncschema_dot_request__response__pb2


class SessionManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.describe = channel.unary_unary(
                '/dunedaq.druncschema.SessionManager/describe',
                request_serializer=druncschema_dot_request__response__pb2.Request.SerializeToString,
                response_deserializer=druncschema_dot_request__response__pb2.Response.FromString,
                )
        self.list_session = channel.unary_unary(
                '/dunedaq.druncschema.SessionManager/list_session',
                request_serializer=druncschema_dot_request__response__pb2.Request.SerializeToString,
                response_deserializer=druncschema_dot_request__response__pb2.Response.FromString,
                )
        self.start_session = channel.unary_unary(
                '/dunedaq.druncschema.SessionManager/start_session',
                request_serializer=druncschema_dot_request__response__pb2.Request.SerializeToString,
                response_deserializer=druncschema_dot_request__response__pb2.Response.FromString,
                )
        self.terminate_session = channel.unary_unary(
                '/dunedaq.druncschema.SessionManager/terminate_session',
                request_serializer=druncschema_dot_request__response__pb2.Request.SerializeToString,
                response_deserializer=druncschema_dot_request__response__pb2.Response.FromString,
                )
        self.load_configuration = channel.unary_unary(
                '/dunedaq.druncschema.SessionManager/load_configuration',
                request_serializer=druncschema_dot_request__response__pb2.Request.SerializeToString,
                response_deserializer=druncschema_dot_request__response__pb2.Response.FromString,
                )
        self.list_configuration = channel.unary_unary(
                '/dunedaq.druncschema.SessionManager/list_configuration',
                request_serializer=druncschema_dot_request__response__pb2.Request.SerializeToString,
                response_deserializer=druncschema_dot_request__response__pb2.Response.FromString,
                )


class SessionManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def describe(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list_session(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def start_session(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def terminate_session(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def load_configuration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def list_configuration(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SessionManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'describe': grpc.unary_unary_rpc_method_handler(
                    servicer.describe,
                    request_deserializer=druncschema_dot_request__response__pb2.Request.FromString,
                    response_serializer=druncschema_dot_request__response__pb2.Response.SerializeToString,
            ),
            'list_session': grpc.unary_unary_rpc_method_handler(
                    servicer.list_session,
                    request_deserializer=druncschema_dot_request__response__pb2.Request.FromString,
                    response_serializer=druncschema_dot_request__response__pb2.Response.SerializeToString,
            ),
            'start_session': grpc.unary_unary_rpc_method_handler(
                    servicer.start_session,
                    request_deserializer=druncschema_dot_request__response__pb2.Request.FromString,
                    response_serializer=druncschema_dot_request__response__pb2.Response.SerializeToString,
            ),
            'terminate_session': grpc.unary_unary_rpc_method_handler(
                    servicer.terminate_session,
                    request_deserializer=druncschema_dot_request__response__pb2.Request.FromString,
                    response_serializer=druncschema_dot_request__response__pb2.Response.SerializeToString,
            ),
            'load_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.load_configuration,
                    request_deserializer=druncschema_dot_request__response__pb2.Request.FromString,
                    response_serializer=druncschema_dot_request__response__pb2.Response.SerializeToString,
            ),
            'list_configuration': grpc.unary_unary_rpc_method_handler(
                    servicer.list_configuration,
                    request_deserializer=druncschema_dot_request__response__pb2.Request.FromString,
                    response_serializer=druncschema_dot_request__response__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'dunedaq.druncschema.SessionManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SessionManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def describe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dunedaq.druncschema.SessionManager/describe',
            druncschema_dot_request__response__pb2.Request.SerializeToString,
            druncschema_dot_request__response__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def list_session(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dunedaq.druncschema.SessionManager/list_session',
            druncschema_dot_request__response__pb2.Request.SerializeToString,
            druncschema_dot_request__response__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def start_session(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dunedaq.druncschema.SessionManager/start_session',
            druncschema_dot_request__response__pb2.Request.SerializeToString,
            druncschema_dot_request__response__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def terminate_session(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dunedaq.druncschema.SessionManager/terminate_session',
            druncschema_dot_request__response__pb2.Request.SerializeToString,
            druncschema_dot_request__response__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def load_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dunedaq.druncschema.SessionManager/load_configuration',
            druncschema_dot_request__response__pb2.Request.SerializeToString,
            druncschema_dot_request__response__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def list_configuration(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/dunedaq.druncschema.SessionManager/list_configuration',
            druncschema_dot_request__response__pb2.Request.SerializeToString,
            druncschema_dot_request__response__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
