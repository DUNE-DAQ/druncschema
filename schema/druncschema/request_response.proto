syntax = "proto3";

package dunedaq.druncschema;

import "druncschema/token.proto";
import "google/protobuf/any.proto";

message Request {
  Token token = 1;
  optional google.protobuf.Any data = 2;
}
enum ResponseFlag {
  EXECUTED_SUCCESSFULLY = 0;
  FAILED = 1;
  NOT_EXECUTED_NOT_IMPLEMENTED = 2;
  NOT_EXECUTED_NOT_IN_CONTROL = 3;
  NOT_EXECUTED_NOT_AUTHORISED = 4;
  NOT_EXECUTED_NODE_IN_ERROR = 5;
  DRUNC_EXCEPTION_THROWN = 6;
  UNHANDLED_EXCEPTION_THROWN = 7;
  NOT_EXECUTED_BAD_REQUEST_FORMAT = 8;
}

message Response { // The "decoded" version (i.e. without Any) of this message is defined at the top of drunc/src/utils/shell_utils.py, modify it there if you want to change the format
  string name = 1;
  Token token = 2; // The token of the sender
  optional google.protobuf.Any data = 3; // Any arbitrary data returned by the command
  ResponseFlag flag = 4; // whether the command was successfull ON SELF ONLY!
  repeated Response children = 5; // a map of the response flags of the children
}

message CommandDescription {
  string name = 1;
  repeated string data_type = 2;
  string help = 3;
  string return_type = 4;
}


message Description {
  string type = 1;
  string name = 2;
  optional string session = 3;
  repeated CommandDescription commands = 4;
  optional google.protobuf.Any broadcast = 5;
}
